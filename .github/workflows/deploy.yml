name: Deploy Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - run: npm run build # if repo has build steps; otherwise skip
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: public

  deploy_github_pages:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: public
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

  deploy_heroku:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ secrets.HEROKU_API_KEY != '' }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Heroku auth
        run: echo "${{ secrets.HEROKU_API_KEY }}" | docker login --username=_ --password-stdin registry.heroku.com
      - name: Build docker image
        run: |
          docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web .
      - name: Push to Heroku registry
        run: docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
      - name: Release on Heroku
        run: |
          curl -n -X POST https://api.heroku.com/apps/${{ secrets.HEROKU_APP_NAME }}/formation \
            -H "Content-Type: application/json" \
            -H "Accept: application/vnd.heroku+json; version=3" \
            -H "Authorization: Bearer ${{ secrets.HEROKU_API_KEY }}" \
            -d '{"updates":[{"type":"web","docker_image":"registry.heroku.com/'${{ secrets.HEROKU_APP_NAME }}'/web"}]}'
